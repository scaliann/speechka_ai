from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import BaseFilter

from app.db.db_helper import get_async_session
from app.keyboards.menu import kbs_menu, kb_terms
from app.user.repositories import UserRepository

router = Router()


class TermsAgreement(StatesGroup):
    waiting_for_agreement = State()


class UserAgreedFilter(BaseFilter):
    async def __call__(self, message: Message) -> bool:
        agreed = await check_user_agreement(message.from_user.id)
        return agreed


@router.message(F.text == "–ü—Ä–æ—Ñ–∏–ª—å")
async def show_main_menu(message: Message):
    await message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å: ")


@router.message(F.text == "–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º")
async def agree_to_terms(message: Message, state: FSMContext):
    async with get_async_session() as orm_sess:
        repo = UserRepository(orm_sess)
        user = await repo.get_or_create(message.from_user.id)
        user.agreed_to_terms = True
        await orm_sess.commit()

    await state.clear()
    await message.answer(
        "‚úÖ –°–ø–∞—Å–∏–±–æ! –í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º.\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞!",
        reply_markup=kbs_menu,
    )


@router.message(TermsAgreement.waiting_for_agreement)
async def handle_terms_state(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è"""
    if message.text != "–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º":
        await message.answer(
            "‚ö†Ô∏è –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–°–æ–≥–ª–∞—Å–µ–Ω —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º¬ª.",
            reply_markup=kb_terms,
        )


async def check_user_agreement(tg_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–≥–ª–∞—Å–∏–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É—Å–ª–æ–≤–∏—è–º–∏"""
    async with get_async_session() as orm_sess:
        repo = UserRepository(orm_sess)
        user = await repo.get_or_create(tg_id)
        return user.agreed_to_terms


async def show_terms_agreement(message: Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ"""
    terms_text = """
üìã **–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ï –°–û–ì–õ–ê–®–ï–ù–ò–ï**

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —Å–µ—Ä–≤–∏—Å –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞!

**1. –û–±—â–∏–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è**
–î–∞–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ Telegram –±–æ—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏ –∞–Ω–∞–ª–∏–∑–∞ –≥–æ–ª–æ—Å–∞.

**2. –°–±–æ—Ä –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö**
- –ú—ã —Å–æ–±–∏—Ä–∞–µ–º –≤–∞—à–∏ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
- –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
- –í–∞—à–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º

**3. –£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–µ—Ä–≤–∏—Å —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω—ã—Ö —Ü–µ–ª–µ–π
- –ù–µ –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç, –Ω–∞—Ä—É—à–∞—é—â–∏–π –ø—Ä–∞–≤–∞ –¥—Ä—É–≥–∏—Ö –ª–∏—Ü
- –°–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ Telegram

**4. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏**
–ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –∫–∞—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞.

**5. –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è**
–ú—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–æ –∏–∑–º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è.
    """

    await message.answer(terms_text, reply_markup=kb_terms, parse_mode="Markdown")
    await state.set_state(TermsAgreement.waiting_for_agreement)
